#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "zmk-helpers/helper.h"
#include "zmk-helpers/unicode-chars/german.dtsi"
#include "keys_de.h"
//https://github.com/urob/zmk-helpers#international-charactersherunterladen

#define ___ &none
#define DEF 0
#define LOW 1
#define HIG 2
#define LOL 3
#define EGO 4

ZMK_UNICODE_SINGLE(euro_sign, N2, N0, A, C)  // â‚¬

&mt {
    tapping-term-ms = <170>;
};

/ {
        chosen {
                zmk,matrix_transform = &five_column_transform;
        };

        combos {
                compatible = "zmk,combos";
                
                combo_lol {
                      timeout-ms = <50>;
                      key-positions = <32 33>;
                      bindings = <&tog LOL>;
                };

                combo_ego {
                        timeout-ms = <50>;
                        key-positions = <4 5>;
                        bindings = <&tog EGO>;
                };
        };

        macros {
                macro_nice_tutorial: macro_nice_tutorial {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        tap-ms = <2>;
                        bindings 
                                = <&macro_press &kp LSHFT>
                                , <&macro_tap &kp RET>
                                , <&macro_release &kp LSHFT>
                                , <&macro_tap &kp DE_N &kp DE_I &kp DE_C &kp DE_E &kp DE_SPACE &kp DE_T &kp DE_U &kp DE_T &kp DE_O &kp DE_R &kp DE_I &kp DE_A &kp DE_L &kp RET>
                                ;
                };

                macro_gg: macro_gg {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        tap-ms = <2>;
                        bindings 
                                = <&macro_press &kp LSHFT>
                                , <&macro_tap &kp RET>
                                , <&macro_release &kp LSHFT>
                                , <&macro_tap &kp DE_G &kp DE_G &kp SPACE &kp DE_W &kp DE_P &kp RET>
                                ;
                };

                macro_ez: macro_ez {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        tap-ms = <2>;
                        bindings
                                = <&macro_press &kp LSHFT>
                                , <&macro_tap &kp RET>
                                , <&macro_release &kp LSHFT>
                                , <&macro_tap &kp DE_E &kp DE_Z &kp RET>
                                ;
                };

                macro_ff: macro_ff {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        tap-ms = <2>;
                        bindings
                                = <&macro_press &kp LSHFT>
                                , <&macro_tap &kp RET>
                                , <&macro_release &kp LSHFT>
                                , <&macro_tap &kp DE_F &kp DE_F &kp RET>
                                ;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                def_layer {
                        display-name = "DEF";
                        bindings = <
                                &kp DE_Q &kp DE_W &kp DE_E &kp DE_R &kp DE_T &kp DE_Z &kp DE_U &kp DE_I &kp DE_O &kp DE_P
                                &kp DE_A &kp DE_S &kp DE_D &kp DE_F &kp DE_G &kp DE_H &kp DE_J &kp DE_K &kp DE_L &kp LSHFT 
                                &kp DE_Y &kp DE_X &kp DE_C &kp DE_V &kp DE_B &kp DE_N &kp DE_M &kp DE_DOT &kp DE_COMMA &kp DE_SLASH
                                &kp LCTRL &kp DE_ESCAPE_CHARACTER &lt HIG DE_SPACE &lt LOW RET &kp BACKSPACE &kp LGUI 
                        >;
                };

                low_layer {
                        display-name = "LOW";
                        bindings = <
                                &kp DE_EXCL &kp DE_DQT &kp DE_HASH &kp DE_DLLR &kp DE_PERCENT &kp DE_AMPERSAND &kp DE_PLUS &kp DE_GRAVE &kp DE_PIPE &kp DE_BACKSLASH
                                &kp DE_TAB &kp DE_MINUS &kp DE_STAR &kp DE_EQUAL &kp DE_COLON &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp DE_AT
                                &kp DE_SQT &kp DE_CARET &kp DE_TILDE &kp DE_UNDERSCORE &kp DE_SEMICOLON &kp DE_LT &kp DE_GT  &kp DE_SLASH &kp DE_QUESTION ___
                                &kp DEL &kp LALT &kp RET ___ &kp RET &kp DEL 
                        >;
                };

                hig_layer {
                        display-name = "HIG";
                        bindings = <
                                &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
                                &kp TAB ___ &kp DE_LBRC &kp DE_LBKT &kp DE_LPAR &kp DE_RPAR &kp DE_RBKT &kp DE_RBRC ___ ___
                                ___ ___ ___ ___ ___ &de_ae &de_ue &de_oe &euro_sign &de_eszett
                                &kp DEL &kp DE_SPACE ___ &kp RET &kp LALT &kp DEL
                        >;
                };

                lol_layer {
                        display-name = "LOL";
                        bindings = <
                                &mt DE_P DE_ESCAPE_CHARACTER &kp N1 &kp N2 &kp N3 &kp N4 &kp T &kp U ___ &macro_gg &macro_nice_tutorial
                                &kp TAB &kp DE_Q &kp DE_W &kp DE_E &kp DE_R ___ ___ ___ ___ &macro_ez 
                                ___ &kp DE_A &kp DE_Y &kp DE_D &kp DE_F &kp DE_B ___ ___ ___ &macro_ff 
                                &kp LCTRL &kp LALT &kp DE_SPACE ___ ___ ___
                        >;
                };

                ego_layer {
                        display-name = "EGO";
                        bindings = <
                                &kp DE_ESCAPE_CHARACTER &kp DE_Q &kp DE_W &kp DE_E &kp DE_R ___ ___ ___ ___ &tog EGO 
                                &kp TAB &kp DE_A &kp DE_S &kp DE_D &kp DE_F &kp DE_G ___ ___ ___ ___
                                &kp LSHFT &kp DE_Y ___ &kp DE_C &kp DE_B &kp DE_N &kp DE_M ___ ___ ___
                                &kp LCTRL &kp LALT &kp DE_SPACE ___ ___ ___
                        >;
                };
        };
};