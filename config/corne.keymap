#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

//https://github.com/urob/zmk-helpers#international-charactersherunterladen
#include "zmk-helpers/helper.h"
#include "zmk-helpers/unicode-chars/german.dtsi"

#define ___ &none
#define DEF 0
#define LOW 1
#define HIG 2
#define LOL 3

ZMK_UNICODE_SINGLE(euro_sign, N2, N0, A, C)  // â‚¬

/ {
        chosen {
                zmk,matrix_transform = &five_column_transform;
        };

        combos {
                compatible = "zmk,combos";
                combo_esc {
                      timeout-ms = <50>;
                      key-positions = <32 33>;
                      bindings = <&tog LOL>;
                };
        };

        macros {
                macro_nice_tutorial: macro_nice_tutorial {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        tap-ms = <5>;
                        bindings 
                                = <&macro_press &kp LSHFT>
                                , <&macro_tap &kp RET>
                                , <&macro_release &kp LSHFT>
                                , <&macro_tap &kp N &kp I &kp C &kp E &kp SPACE &kp T &kp U &kp T &kp O &kp R &kp I &kp A &kp L &kp RET>
                                ;
                };

                macro_gg: macro_gg {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        tap-ms = <5>;
                        bindings 
                                = <&macro_press &kp LSHFT>
                                , <&macro_tap &kp RET>
                                , <&macro_release &kp LSHFT>
                                , <&macro_tap &kp G &kp G &kp SPACE &kp W &kp P &kp RET>
                                ;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                def_layer {
                        display-name = "DEF";
                        bindings = <
                                &kp Q &kp W &kp E &kp R &kp T &kp Z &kp U &kp I &kp O &kp P
                                &mt LSHFT A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &mt LSHFT SQT
                                &kp Y &kp X &kp C &kp V &kp B &kp N &kp M &kp DOT &kp COMMA &mt LCTRL SLASH
                                &kp LCTRL &kp ESC &lt HIG SPACE &lt LOW RET &kp BACKSPACE &mt LGUI TAB
                        >;
                };

                low_layer {
                        display-name = "LOW";
                        bindings = <
                                &mt EXCL N1 &mt DOUBLE_QUOTES N2 &mt HASH N3 &mt DLLR N4 &mt PERCENT N5 &mt AMPERSAND N6 &kp N7 &kp N8 &kp N9 &mt BACKSLASH N0
                                &kp PLUS &kp MINUS &kp STAR &kp EQUAL &kp COLON &kp AT &de_ae &de_ue &de_oe &kp QUESTION
                                &mt GRAVE PIPE &kp CARET &kp TILDE &kp UNDERSCORE &kp SEMICOLON &kp LT &kp GT &euro_sign &de_eszett &kp SLASH
                                &kp LGUI &kp SPACE &kp RET ___ &kp RET &kp DEL 
                        >;
                };

                hig_layer {
                        display-name = "HIG";
                        bindings = <
                                ___ ___ &kp LBRC &kp LBKT &kp LPAR &kp RPAR &kp RBKT &kp RBRC &kp LALT &kp TAB
                                ___ ___ ___ ___ &kp COLON &kp LEFT &kp DOWN &kp UP &kp RIGHT ___
                                ___ ___ ___ ___ &kp SEMICOLON ___ ___ ___ ___ ___
                                &kp LGUI &kp SPACE ___ &kp LALT &kp RET &kp DEL
                        >;
                };

                lol_layer {
                        display-name = "LOL";
                        bindings = <
                                &mt P ESC &kp N1 &kp N2 &kp N3 &kp N4 &kp T &kp U ___ &macro_gg &macro_nice_tutorial
                                &kp TAB &kp Q &kp W &kp E &kp R ___ ___ ___ ___ ___ 
                                ___ &kp A &kp G &kp D &kp F ___ ___ ___ ___ ___
                                &kp LCTRL &kp LALT &kp SPACE ___ ___ ___
                        >;
                };
        };
};